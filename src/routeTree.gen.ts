/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterStep2RouteImport } from './routes/register-step-2'
import { Route as RegisterStep1RouteImport } from './routes/register-step-1'
import { Route as HomeRouteImport } from './routes/home'
import { Route as AboutRouteImport } from './routes/about'

const RegisterStep2Route = RegisterStep2RouteImport.update({
  id: '/register-step-2',
  path: '/register-step-2',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterStep1Route = RegisterStep1RouteImport.update({
  id: '/register-step-1',
  path: '/register-step-1',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRoute = HomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/about': typeof AboutRoute
  '/home': typeof HomeRoute
  '/register-step-1': typeof RegisterStep1Route
  '/register-step-2': typeof RegisterStep2Route
}
export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/home': typeof HomeRoute
  '/register-step-1': typeof RegisterStep1Route
  '/register-step-2': typeof RegisterStep2Route
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/about': typeof AboutRoute
  '/home': typeof HomeRoute
  '/register-step-1': typeof RegisterStep1Route
  '/register-step-2': typeof RegisterStep2Route
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/about' | '/home' | '/register-step-1' | '/register-step-2'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/home' | '/register-step-1' | '/register-step-2'
  id: '__root__' | '/about' | '/home' | '/register-step-1' | '/register-step-2'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AboutRoute: typeof AboutRoute
  HomeRoute: typeof HomeRoute
  RegisterStep1Route: typeof RegisterStep1Route
  RegisterStep2Route: typeof RegisterStep2Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register-step-2': {
      id: '/register-step-2'
      path: '/register-step-2'
      fullPath: '/register-step-2'
      preLoaderRoute: typeof RegisterStep2RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register-step-1': {
      id: '/register-step-1'
      path: '/register-step-1'
      fullPath: '/register-step-1'
      preLoaderRoute: typeof RegisterStep1RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AboutRoute: AboutRoute,
  HomeRoute: HomeRoute,
  RegisterStep1Route: RegisterStep1Route,
  RegisterStep2Route: RegisterStep2Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
