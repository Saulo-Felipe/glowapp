/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSignUpPageRouteImport } from './routes/auth/sign-up/page'
import { Route as AuthSignInPageRouteImport } from './routes/auth/sign-in/page'
import { Route as AuthSignInAttypesRouteImport } from './routes/auth/sign-in/@types'
import { Route as AuthSignUpCompanyProfilePageRouteImport } from './routes/auth/sign-up/company-profile/page'
import { Route as AuthSignUpCategoriesPageRouteImport } from './routes/auth/sign-up/categories/page'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpPageRoute = AuthSignUpPageRouteImport.update({
  id: '/auth/sign-up/page',
  path: '/auth/sign-up/page',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInPageRoute = AuthSignInPageRouteImport.update({
  id: '/auth/sign-in/page',
  path: '/auth/sign-in/page',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInAttypesRoute = AuthSignInAttypesRouteImport.update({
  id: '/auth/sign-in/@types',
  path: '/auth/sign-in/@types',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpCompanyProfilePageRoute =
  AuthSignUpCompanyProfilePageRouteImport.update({
    id: '/auth/sign-up/company-profile/page',
    path: '/auth/sign-up/company-profile/page',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthSignUpCategoriesPageRoute =
  AuthSignUpCategoriesPageRouteImport.update({
    id: '/auth/sign-up/categories/page',
    path: '/auth/sign-up/categories/page',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/sign-in/@types': typeof AuthSignInAttypesRoute
  '/auth/sign-in/page': typeof AuthSignInPageRoute
  '/auth/sign-up/page': typeof AuthSignUpPageRoute
  '/auth/sign-up/categories/page': typeof AuthSignUpCategoriesPageRoute
  '/auth/sign-up/company-profile/page': typeof AuthSignUpCompanyProfilePageRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/sign-in/@types': typeof AuthSignInAttypesRoute
  '/auth/sign-in/page': typeof AuthSignInPageRoute
  '/auth/sign-up/page': typeof AuthSignUpPageRoute
  '/auth/sign-up/categories/page': typeof AuthSignUpCategoriesPageRoute
  '/auth/sign-up/company-profile/page': typeof AuthSignUpCompanyProfilePageRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/sign-in/@types': typeof AuthSignInAttypesRoute
  '/auth/sign-in/page': typeof AuthSignInPageRoute
  '/auth/sign-up/page': typeof AuthSignUpPageRoute
  '/auth/sign-up/categories/page': typeof AuthSignUpCategoriesPageRoute
  '/auth/sign-up/company-profile/page': typeof AuthSignUpCompanyProfilePageRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/sign-in/@types'
    | '/auth/sign-in/page'
    | '/auth/sign-up/page'
    | '/auth/sign-up/categories/page'
    | '/auth/sign-up/company-profile/page'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/sign-in/@types'
    | '/auth/sign-in/page'
    | '/auth/sign-up/page'
    | '/auth/sign-up/categories/page'
    | '/auth/sign-up/company-profile/page'
  id:
    | '__root__'
    | '/'
    | '/auth/sign-in/@types'
    | '/auth/sign-in/page'
    | '/auth/sign-up/page'
    | '/auth/sign-up/categories/page'
    | '/auth/sign-up/company-profile/page'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthSignInAttypesRoute: typeof AuthSignInAttypesRoute
  AuthSignInPageRoute: typeof AuthSignInPageRoute
  AuthSignUpPageRoute: typeof AuthSignUpPageRoute
  AuthSignUpCategoriesPageRoute: typeof AuthSignUpCategoriesPageRoute
  AuthSignUpCompanyProfilePageRoute: typeof AuthSignUpCompanyProfilePageRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up/page': {
      id: '/auth/sign-up/page'
      path: '/auth/sign-up/page'
      fullPath: '/auth/sign-up/page'
      preLoaderRoute: typeof AuthSignUpPageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in/page': {
      id: '/auth/sign-in/page'
      path: '/auth/sign-in/page'
      fullPath: '/auth/sign-in/page'
      preLoaderRoute: typeof AuthSignInPageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in/@types': {
      id: '/auth/sign-in/@types'
      path: '/auth/sign-in/@types'
      fullPath: '/auth/sign-in/@types'
      preLoaderRoute: typeof AuthSignInAttypesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up/company-profile/page': {
      id: '/auth/sign-up/company-profile/page'
      path: '/auth/sign-up/company-profile/page'
      fullPath: '/auth/sign-up/company-profile/page'
      preLoaderRoute: typeof AuthSignUpCompanyProfilePageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up/categories/page': {
      id: '/auth/sign-up/categories/page'
      path: '/auth/sign-up/categories/page'
      fullPath: '/auth/sign-up/categories/page'
      preLoaderRoute: typeof AuthSignUpCategoriesPageRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthSignInAttypesRoute: AuthSignInAttypesRoute,
  AuthSignInPageRoute: AuthSignInPageRoute,
  AuthSignUpPageRoute: AuthSignUpPageRoute,
  AuthSignUpCategoriesPageRoute: AuthSignUpCategoriesPageRoute,
  AuthSignUpCompanyProfilePageRoute: AuthSignUpCompanyProfilePageRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
